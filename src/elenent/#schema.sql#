-- uses postgresql 13
-- src/elenent/schema.sql
-- enter environment: $ sudo su postgres -c psql
-- create admin role: # create role elenent_adm superuser;
-- create database: # create database elenent_db owner elenent_adm;
-- add password to role: # alter role elenent_adm with password 'el1234';
-- add login access to role: # alter role elenent_adm with login;
-- enter database: # \c elenent_db;


-- delete tables
drop table security_tnote_info;
drop table security;
drop table log;
drop table person_info;
drop table person;
drop table client_info;
drop table client;

create table client
( id serial primary key
, created_at timestamp with time zone default current_timestamp );

create table client_info
( id int primary key
, client_id int references client(id) not null
, name text not null
, email text not null 
, rid int not null
, op boolean not null
, entered_at timestamp with time zone default current_timestamp );

create table person
( id serial primary key
, client_id int references client(id) not null
, created_at timestamp with time zone default current_timestamp );

create table person_info
( id serial primary key
, person_id int references person(id) not null
, name text not null 
, email text not null
, phone text not null
, rid int not null
, opt boolean not null 
, entered_at timestamp with time zone default current_timestamp );

create table log
( id serial primary key
, person_id int references person(id) not null
, created_at timestamp default now() not null );

create table security
( id serial primary key
, branch text not null
, log_id int references log(id) not null ); 

create table security_tnote_def
( id int primary key
, security_id int references security(id) not null
, ticker text not null 
, description text not null
, multiplier int not null 
, matured_on date not null
, log_id int references log(id) not null 
, rid int not null 
, op boolean ); 

create table security_index_def
( id int primary key
, security_id int references security(id) not null
, ticker text not null 
, description text not null 
, multiplier int not null 
, log_id int references log(id) not null 
, rid int not null 
, op boolean ); 

create table derivative
( id serial primary key
, branch text not null
, log_id int references log(id) not null );

create table derivative_future_def
( id int primary key
, derivative_id int references derivative(id) not null
, name text not null 
, underlying_id int not null
, traded_on date not null
, matured_on date not null
, terminated_on date not null
, description text not null
, 






